/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Main.java to edit this template
 */
package com.jiot.ledrpi;

import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import jdk.dio.DeviceManager;
import jdk.dio.gpio.GPIOPin;

/**
 *
 * @author comit4
 */
public class LEDRPI{
    
    private GPIOPin gpioPin = null;
    private String gpioName = null;
    private Thread blinkThread = null;
    private int blinkMillis = 0;

    public LEDRPI(String gpioName) throws IOException {
        this.gpioName = gpioName;
        this.gpioPin = DeviceManager.open(gpioName, GPIOPin.class);
    }
    
    public void on() throws IOException {
        this.gpioPin.setValue(true);
    }
   
    public void off() throws IOException {
        this.gpioPin.setValue(false);
    }
   
    public void toggle() throws IOException {
        gpioPin.setValue(!gpioPin.getValue());
    }
   
    
    public void blick(int millis) {
        this.blinkMillis = millis;
        if (blinkThread == null) { // 0이 아닌 경우 동작
            blinkThread =  new Thread(new Runnable() {
                @Override
                public void run() {
                     while (true) {
                         try {
                             toggle();
                             Thread.sleep(blinkMillis);
                         } catch (IOException ex) {
                             Logger.getLogger(LEDRPI.class.getName()).log(Level.SEVERE, null, ex);
                         } catch (InterruptedException ex) {
                             Logger.getLogger(LEDRPI.class.getName()).log(Level.SEVERE, null, ex);
                         }
                     }
                }
            });
            blinkThread.start();
        }
        
        if (millis == 0) {
            blinkThread.suspend();
        } else {
            blinkThread.resume();
        }

    }
   
    public void close() throws IOException { // 프로그램 종료
        if(gpioPin != null && gpioPin.isOpen()){
            gpioPin.close();
        }
    }
}
